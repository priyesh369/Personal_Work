#BlueJ class context
comment0.params=description
comment0.target=Room(java.lang.String)
comment0.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n\ Pre-condition\:\ description\ is\ not\ null.\r\n
comment1.params=
comment1.target=void\ sane()
comment1.text=\r\n\ Class\ invariant\:\ getShortDescription()\ and\ getLongDescription()\ don't\ return\ null.\r\n
comment10.params=direction
comment10.target=Room\ getExit(Direction)
comment10.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n\ Pre-condition\:\ direction\ is\ not\ null\r\n
comment2.params=item\ current
comment2.target=void\ setItem(Item,\ Room)
comment2.text=\r\n\ Adds\ item\ to\ a\ room.\r\n\ @param\ item\ the\ item\ to\ be\ associated\ with\ the\ room\r\n\ @param\ current\ the\ room\ for\ which\ the\ item\ is\ to\ be\ associated\ with\r\n\ Pre-condition\:\ item\ is\ not\ null.\r\n\ Pre-condition\:\ current\ is\ not\ null.\r\n
comment3.params=item\ current
comment3.target=java.lang.Boolean\ removeItem(Item,\ Room)
comment3.text=\r\n\ removes\ item\ from\ a\ room.\r\n\ @param\ item\ the\ item\ to\ be\ removed\ from\ the\ room\r\n\ @param\ current\ the\ room\ for\ which\ the\ item\ is\ to\ be\ removed\ from\r\n\ Pre-condition\:\ item\ is\ not\ null.\r\n\ Pre-condition\:\ current\ is\ not\ null.\r\n\ @\ return\ false\ if\ item\ has\ not\ been\ removed\ and\ true\ if\ item\ has\ been\ removed\r\n
comment4.params=
comment4.target=java.lang.String\ getItemString()
comment4.text=\r\n\ creates\ and\ returns\ an\ item\ string\ for\ the\ current\ room.\r\n\ @return\ The\ item\ list\ of\ the\ room\r\n
comment5.params=
comment5.target=java.util.HashMap\ getItemsReference()
comment5.text=\r\n\ returns\ the\ items\ hashmap\ for\ the\ current\ room.\r\n\ @return\ the\ items\ hashmap\ for\ the\ current\ room.\r\n
comment6.params=direction\ neighbor
comment6.target=void\ setExit(Direction,\ Room)
comment6.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n\ Pre-condition\:\ neither\ direction\ nor\ neighbor\ are\ null;\ \r\n\ there\ is\ no\ room\ in\ given\ direction\ yet.\r\n
comment7.params=
comment7.target=java.lang.String\ getShortDescription()
comment7.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment8.params=
comment8.target=java.lang.String\ getLongDescription()
comment8.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment9.params=
comment9.target=java.lang.String\ getExitString()
comment9.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
numComments=11
